// SPDX-License-Identifier: GPL-2.0

#include <dt-bindings/power/raspberrypi-power.h>

&soc {
	firmware: firmware {
		compatible = "raspberrypi,bcm2835-firmware", "simple-mfd";
		#address-cells = <1>;
		#size-cells = <1>;

		mboxes = <&mailbox>;
		dma-ranges;

		firmware_clocks: clocks {
			compatible = "raspberrypi,firmware-clocks";
			#clock-cells = <1>;
		};

		reset: reset {
			compatible = "raspberrypi,firmware-reset";
			#reset-cells = <1>;
		};

		vcio: vcio {
			compatible = "raspberrypi,vcio";
		};
	};

	power: power {
		compatible = "raspberrypi,bcm2835-power";
		firmware = <&firmware>;
		#power-domain-cells = <1>;
	};

	fb: fb {
		compatible = "brcm,bcm2708-fb";
		firmware = <&firmware>;
		status = "okay";
	};

	rpi_rtc: rpi_rtc {
		compatible = "raspberrypi,rpi-rtc";
		firmware = <&firmware>;
		status = "okay";
		trickle-charge-microvolt = <0>;
	};

	nvmem {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <1>;

		nvmem_otp: nvmem_otp {
			compatible = "raspberrypi,rpi-otp";
			firmware = <&firmware>;
			reg = <0 192>;
			status = "okay";
		};

		nvmem_cust: nvmem_cust {
			compatible = "raspberrypi,rpi-otp";
			firmware = <&firmware>;
			reg = <1 8>;
			status = "okay";
		};

		nvmem_mac: nvmem_mac {
			compatible = "raspberrypi,rpi-otp";
			firmware = <&firmware>;
			reg = <2 6>;
			status = "okay";
		};

		nvmem_priv: nvmem_priv {
			compatible = "raspberrypi,rpi-otp";
			firmware = <&firmware>;
			reg = <3 16>;
			status = "okay";
		};
	};

	/* Define these notional regulators for use by overlays, etc. */
	vdd_3v3_reg: fixedregulator_3v3 {
		compatible = "regulator-fixed";
		regulator-always-on;
		regulator-max-microvolt = <3300000>;
		regulator-min-microvolt = <3300000>;
		regulator-name = "3v3";
	};

	vdd_5v0_reg: fixedregulator_5v0 {
		compatible = "regulator-fixed";
		regulator-always-on;
		regulator-max-microvolt = <5000000>;
		regulator-min-microvolt = <5000000>;
		regulator-name = "5v0";
	};
};

/ {
	chosen: chosen {
		bootargs = "reboot=w coherent_pool=1M 8250.nr_uarts=1 pci=pcie_bus_safe numa_policy=interleave";
		stdout-path = "serial10:115200n8";
	};

	aliases: aliases {
		blconfig = &blconfig;
		blpubkey = &blpubkey;
		bluetooth = &bluetooth;
		console = &uart10;
		drm-dsi1 = &dsi0;
		drm-dsi2 = &dsi1;
		ethernet0 = &rp1_eth;
		fb = &fb;
		gpio0 = &gpio;
		gpio1 = &gio;
		gpio2 = &gio_aon;
		gpio3 = &pinctrl;
		gpio4 = &pinctrl_aon;
		gpiochip0 = &gpio;
		gpiochip10 = &gio;
		i2c = &i2c_arm;
		i2c0 = &i2c0;
		i2c1 = &i2c1;
		i2c2 = &i2c2;
		i2c3 = &i2c3;
		i2c10 = &i2c_csi_dsi0;
		i2c11 = &i2c_csi_dsi1;
		i2c12 = &i2c_rp1boot;
		mailbox = &mailbox;
		mmc0 = &sdio1;
		serial0 = &uart0;
		serial1 = &uart1;
		serial10 = &uart10;
		serial2 = &uart2;
		serial3 = &uart3;
		serial4 = &uart4;
		spi0 = &spi0;
		spi1 = &spi1;
		spi10 = &spi10;
		spi2 = &spi2;
		spi3 = &spi3;
		spi4 = &spi4;
		spi5 = &spi5;
		uart0 = &uart0;
		uart1 = &uart1;
		uart10 = &uart10;
		uart2 = &uart2;
		uart3 = &uart3;
		uart4 = &uart4;
		usb0 = &rp1_usb0;
		usb1 = &rp1_usb1;
		wifi0 = &wifi;
	};

	__overrides__ {
		act_led_gpio = <&led_act>,"gpios:4",<&led_act>,"gpios:0=",<&gpio>;
		act_led_activelow = <&led_act>, "gpios:8";
		act_led_trigger = <&led_act>, "linux,default-trigger";
		axiperf = <&axiperf>,"status";
		bdaddr = <&bluetooth>, "local-bd-address[";
		button_debounce = <&pwr_key>, "debounce-interval:0";
		cooling_fan = <&fan>, "status", <&rp1_pwm1>, "status";
		drm_fb0_rp1_dpi = <&aliases>, "drm-fb0=",&dpi;
		drm_fb0_rp1_dsi0 = <&aliases>, "drm-fb0=",&dsi0;
		drm_fb0_rp1_dsi1 = <&aliases>, "drm-fb0=",&dsi1;
		drm_fb0_vc4 = <&aliases>, "drm-fb0=",&vc4;
		drm_fb1_rp1_dpi = <&aliases>, "drm-fb1=",&dpi;
		drm_fb1_rp1_dsi0 = <&aliases>, "drm-fb1=",&dsi0;
		drm_fb1_rp1_dsi1 = <&aliases>, "drm-fb1=",&dsi1;
		drm_fb1_vc4 = <&aliases>, "drm-fb1=",&vc4;
		drm_fb2_rp1_dpi = <&aliases>, "drm-fb2=",&dpi;
		drm_fb2_rp1_dsi0 = <&aliases>, "drm-fb2=",&dsi0;
		drm_fb2_rp1_dsi1 = <&aliases>, "drm-fb2=",&dsi1;
		drm_fb2_vc4 = <&aliases>, "drm-fb2=",&vc4;
		eth_led0 = <&phy1>,"led-modes:0";
		eth_led1 = <&phy1>,"led-modes:4";
		fan_temp0 = <&cpu_tepid>,"temperature:0";
		fan_temp0_hyst = <&cpu_tepid>,"hysteresis:0";
		fan_temp0_speed = <&fan>, "cooling-levels:4";
		fan_temp1 = <&cpu_warm>,"temperature:0";
		fan_temp1_hyst = <&cpu_warm>,"hysteresis:0";
		fan_temp1_speed = <&fan>, "cooling-levels:8";
		fan_temp2 = <&cpu_hot>,"temperature:0";
		fan_temp2_hyst = <&cpu_hot>,"hysteresis:0";
		fan_temp2_speed = <&fan>, "cooling-levels:12";
		fan_temp3 = <&cpu_vhot>,"temperature:0";
		fan_temp3_hyst = <&cpu_vhot>,"hysteresis:0";
		fan_temp3_speed = <&fan>, "cooling-levels:16";
		i2c = <&i2c1>, "status";
		i2c_arm = <&i2c_arm>, "status";
		i2c_arm_baudrate = <&i2c_arm>, "clock-frequency:0";
		i2c_baudrate = <&i2c_arm>, "clock-frequency:0";
		i2c_csi_dsi = <&i2c_csi_dsi>, "status";
		i2c_csi_dsi0 = <&i2c_csi_dsi0>, "status";
		i2c_csi_dsi1 = <&i2c_csi_dsi1>, "status";
		i2c_vc = <&i2c_vc>, "status";
		i2c_vc_baudrate = <&i2c_vc>, "clock-frequency:0";
		i2c0 = <&i2c0>, "status";
		i2c0_baudrate = <&i2c0>, "clock-frequency:0";
		i2c1 = <&i2c1>, "status";
		i2c1_baudrate = <&i2c1>, "clock-frequency:0";
		krnbt = <&bluetooth>, "status";
		nvme = <&pciex1>, "status";
		nvmem_cust_rw = <&nvmem_cust>,"rw?";
		nvmem_mac_rw = <&nvmem_mac>,"rw?";
		nvmem_priv_rw = <&nvmem_priv>,"rw?";
		pcie_tperst_clk_ms = <&pciex1>, "brcm,tperst-clk-ms:0";
		pciex1 = <&pciex1>, "status";
		pciex1_gen = <&pciex1> , "max-link-speed:0";
		pciex1_no_l0s = <&pciex1>, "aspm-no-l0s?";
		pciex1_tperst_clk_ms = <&pciex1>, "brcm,tperst-clk-ms:0";
		pwr_led_gpio = <&led_pwr>, "gpios:4";
		pwr_led_activelow = <&led_pwr>, "gpios:8";
		pwr_led_trigger = <&led_pwr>, "linux,default-trigger";
		random = <&random>, "status";
		rtc = <&rpi_rtc>, "status";
		rtc_bbat_vchg = <&rpi_rtc>, "trickle-charge-microvolt:0";
		spi = <&spi0>, "status";
		strict_gpiod = <&chosen>, "bootargs=pinctrl_rp1.persist_gpio_outputs=n";
		suspend = <&pwr_key>, "linux,code:0=205";
		uart0 = <&uart0>, "status";
		uart0_console = <&uart0>,"status", <&aliases>, "console=",&uart0;
		wifiaddr = <&wifi>, "local-mac-address[";

		cam0_reg = <&cam0_reg>,"status";
		cam0_reg_gpio = <&cam0_reg>,"gpio:4",
				<&cam0_reg>,"gpio:0=", <&gpio>;
		cam1_reg = <&cam1_reg>,"status";
		cam1_reg_gpio = <&cam1_reg>,"gpio:4",
				<&cam1_reg>,"gpio:0=", <&gpio>;
	};
};

pciex1: &pcie1 { };
pciex4: &pcie2 { };

&dma32 {
	/* The VPU firmware uses DMA channel 11 for VCHIQ */
	brcm,dma-channel-mask = <0x03f>;
};

&dma40 {
	/* The VPU firmware DMA channel 11 for VCHIQ */
	brcm,dma-channel-mask = <0x07c0>;
};

&hdmi0 {
	dmas = <&dma40 (10|(1<<30)|(1<<24)|(10<<16)|(15<<20))>;
};

&hdmi1 {
	dmas = <&dma40 (17|(1<<30)|(1<<24)|(10<<16)|(15<<20))>;
};

&spi10 {
	dmas = <&dma40 6>, <&dma40 7>;
	dma-names = "tx", "rx";
};

&usb {
	power-domains = <&power RPI_POWER_DOMAIN_USB>;
};

&rmem {
	/*
	 * RPi5's co-processor will copy the board's bootloader configuration
	 * into memory for the OS to consume. It'll also update this node with
	 * its placement information.
	 */
	blconfig: nvram@0 {
		compatible = "raspberrypi,bootloader-config", "nvmem-rmem";
		#address-cells = <1>;
		#size-cells = <1>;
		reg = <0x0 0x0 0x0>;
		no-map;
		status = "disabled";
	};
	/*
	 * RPi5 will copy the binary public key blob (if present) from the bootloader
	 * into memory for use by the OS.
	 */
	blpubkey: nvram@1 {
		compatible = "raspberrypi,bootloader-public-key", "nvmem-rmem";
		#address-cells = <1>;
		#size-cells = <1>;
		reg = <0x0 0x0 0x0>;
		no-map;
		status = "disabled";
	};
};

&rp1_adc {
	status = "okay";
};

/* Add some gpiomem nodes to make the devices accessible to userspace.
 * /dev/gpiomem<n> should expose the registers for the interface with DT alias
 * gpio<n>.
 */

&rp1 {
	gpiomem@d0000 {
		/* Export IO_BANKs, RIO_BANKs and PADS_BANKs to userspace */
		compatible = "raspberrypi,gpiomem";
		reg = <0xc0 0x400d0000  0x0 0x30000>;
		chardev-name = "gpiomem0";
	};
};

&soc {
	gpiomem@7d508500 {
		compatible = "raspberrypi,gpiomem";
		reg = <0x7d508500 0x40>;
		chardev-name = "gpiomem1";
	};

	gpiomem@7d517c00 {
		compatible = "raspberrypi,gpiomem";
		reg = <0x7d517c00 0x40>;
		chardev-name = "gpiomem2";
	};

	gpiomem@7d504100 {
		compatible = "raspberrypi,gpiomem";
		reg = <0x7d504100 0x20>;
		chardev-name = "gpiomem3";
	};

	gpiomem@7d510700 {
		compatible = "raspberrypi,gpiomem";
		reg = <0x7d510700 0x20>;
		chardev-name = "gpiomem4";
	};

	sound: sound {
		status = "disabled";
	};
};

i2c0: &rp1_i2c0 { };
i2c1: &rp1_i2c1 { };
i2c2: &rp1_i2c2 { };
i2c3: &rp1_i2c3 { };
i2c4: &rp1_i2c4 { };
i2c5: &rp1_i2c5 { };
i2c6: &rp1_i2c6 { };
i2s:  &rp1_i2s0 { };
i2s_clk_producer: &rp1_i2s0 { };
i2s_clk_consumer: &rp1_i2s1 { };
pwm0: &rp1_pwm0 { };
pwm1: &rp1_pwm1 { };
pwm: &pwm0 { };
spi0: &rp1_spi0 { };
spi1: &rp1_spi1 { };
spi2: &rp1_spi2 { };
spi3: &rp1_spi3 { };
spi4: &rp1_spi4 { };
spi5: &rp1_spi5 { };

uart0_pins: &rp1_uart0_14_15 {};
uart0_ctsrts_pins: &rp1_uart0_ctsrts_16_17 {};
uart0: &rp1_uart0 {
	pinctrl-0 = <&uart0_pins>;
};

uart1_pins: &rp1_uart1_0_1 {};
uart1_ctsrts_pins: &rp1_uart1_ctsrts_2_3 {};
uart1: &rp1_uart1 { };

uart2_pins: &rp1_uart2_4_5 {};
uart2_ctsrts_pins: &rp1_uart2_ctsrts_6_7 {};
uart2: &rp1_uart2 { };

uart3_pins: &rp1_uart3_8_9 {};
uart3_ctsrts_pins: &rp1_uart3_ctsrts_10_11 {};
uart3: &rp1_uart3 { };

uart4_pins: &rp1_uart4_12_13 {};
uart4_ctsrts_pins: &rp1_uart4_ctsrts_14_15 {};
uart4: &rp1_uart4 { };

i2c0_pins: &rp1_i2c0_0_1 {};
i2c_vc: &i2c0 {      // This is pins 27,28 on the header (not MIPI)
	pinctrl-0 = <&i2c0_pins>;
	pinctrl-names = "default";
	clock-frequency = <100000>;
};

i2c1_pins: &rp1_i2c1_2_3 {};
i2c_arm: &i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins>;
	clock-frequency = <100000>;
};

i2c2_pins: &rp1_i2c2_4_5 {};
&i2c2 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c2_pins>;
};

i2c3_pins: &rp1_i2c3_6_7 {};
&i2c3 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c3_pins>;
};

&i2s_clk_producer {
	pinctrl-names = "default";
	pinctrl-0 = <&rp1_i2s0_18_21>;
};

&i2s_clk_consumer {
	pinctrl-names = "default";
	pinctrl-0 = <&rp1_i2s1_18_21>;
};

spi0_pins: &rp1_spi0_gpio9 {};
spi0_cs_pins: &rp1_spi0_cs_gpio7 {};

&spi0 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi0_pins &spi0_cs_pins>;
	cs-gpios = <&gpio 8 1>, <&gpio 7 1>;

	spidev0: spidev@0 {
		compatible = "spidev";
		reg = <0>;	/* CE0 */
		#address-cells = <1>;
		#size-cells = <0>;
		spi-max-frequency = <125000000>;
	};

	spidev1: spidev@1 {
		compatible = "spidev";
		reg = <1>;	/* CE1 */
		#address-cells = <1>;
		#size-cells = <0>;
		spi-max-frequency = <125000000>;
	};
};

spi2_pins: &rp1_spi2_gpio1 {};
&spi2 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi2_pins>;
};

spi3_pins: &rp1_spi3_gpio5 {};
&spi3 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi3_pins>;
};

spi4_pins: &rp1_spi4_gpio9 {};
&spi4 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi4_pins>;
};

spi5_pins: &rp1_spi5_gpio13 {};
&spi5 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi5_pins>;
};
